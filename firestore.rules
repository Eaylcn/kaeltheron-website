rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Temel fonksiyonlar
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Kullanıcı dokümanlarına erişim kuralları
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.username is string
        && request.resource.data.email is string;
      allow update: if isAuthenticated() 
        && (isOwner(userId) || request.resource.data.emailVerified is bool);
      allow delete: if false;
    }

    // Karakter dokümanlarına erişim kuralları
    match /characters/{characterId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
    }

    // Macera dokümanlarına erişim kuralları
    match /adventures/{adventureId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
    }
  }
} 